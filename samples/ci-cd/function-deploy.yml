name: Deploy Function Code

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: "dev"
      release_tag:
        description: "Release tag to deploy (e.g., v1.0.0)"
        required: true
        type: string

permissions:
  contents: read

jobs:
  deploy-function:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout infrastructure repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5
          terraform_wrapper: false

      - name: Setup Azure CLI
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Get deployment info
        id: terraform-output
        run: |
          echo "resource_group_name=$(terraform output -raw resource_group_name)" >> $GITHUB_OUTPUT
          echo "function_app_name=$(terraform output -raw function_app_name)" >> $GITHUB_OUTPUT
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Download release artifacts
        run: |
          # Download the Azure Function package from the specified release
          wget -O azure-function-package.zip \
            "https://github.com/pvandervelde/merge_warden/releases/download/${{ github.event.inputs.release_tag }}/azure-function-package.zip"

          # Download and verify checksum
          wget -O azure-function-package.zip.sha256 \
            "https://github.com/pvandervelde/merge_warden/releases/download/${{ github.event.inputs.release_tag }}/azure-function-package.zip.sha256"

          # Verify integrity
          sha256sum -c azure-function-package.zip.sha256

      - name: Deploy function package
        run: |
          az functionapp deployment source config-zip \
            --resource-group "${{ steps.terraform-output.outputs.resource_group_name }}" \
            --name "${{ steps.terraform-output.outputs.function_app_name }}" \
            --src azure-function-package.zip

      - name: Wait for deployment to complete
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30

          # Check function health
          FUNCTION_NAME="${{ steps.terraform-output.outputs.function_app_name }}"
          az functionapp show \
            --resource-group "${{ steps.terraform-output.outputs.resource_group_name }}" \
            --name "$FUNCTION_NAME" \
            --query "state" -o tsv

      - name: Display deployment summary
        run: |
          echo "## Deployment Summary"
          echo "- **Environment**: ${{ github.event.inputs.environment }}"
          echo "- **Release**: ${{ github.event.inputs.release_tag }}"
          echo "- **Resource Group**: ${{ steps.terraform-output.outputs.resource_group_name }}"
          echo "- **Function App**: ${{ steps.terraform-output.outputs.function_app_name }}"
          echo ""
          echo "Function URL for GitHub webhook:"
          echo "https://${{ steps.terraform-output.outputs.function_app_name }}.azurewebsites.net/api/merge_warden"
