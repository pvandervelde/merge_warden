name: Terraform Apply

on:
  push:
    branches: [main]
    paths: ["terraform/**"]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: "dev"

permissions:
  contents: read

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    # For workflow_dispatch, use the selected environment
    # For push events, deploy to dev by default
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5

      - name: Setup Azure CLI
        uses: azure/login@v2
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file="environments/${{ github.event.inputs.environment || 'dev' }}.tfvars" \
            -var="github_app_id=${{ secrets.GITHUB_APP_ID }}" \
            -var="github_app_private_key=${{ secrets.GITHUB_APP_PRIVATE_KEY }}" \
            -var="github_webhook_secret=${{ secrets.GITHUB_WEBHOOK_SECRET }}" \
            -out=deployment.tfplan
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve deployment.tfplan
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Output deployment info
        id: output
        run: |
          echo "resource_group_name=$(terraform output -raw resource_group_name)" >> $GITHUB_OUTPUT
          echo "function_app_name=$(terraform output -raw function_app_name)" >> $GITHUB_OUTPUT
          echo "function_url=$(terraform output -raw function_url)" >> $GITHUB_OUTPUT
        working-directory: terraform

      - name: Display deployment info
        run: |
          echo "## Deployment Complete"
          echo "- **Environment**: ${{ github.event.inputs.environment || 'dev' }}"
          echo "- **Resource Group**: ${{ steps.output.outputs.resource_group_name }}"
          echo "- **Function App**: ${{ steps.output.outputs.function_app_name }}"
          echo "- **Function URL**: ${{ steps.output.outputs.function_url }}"
          echo ""
          echo "Next steps:"
          echo "1. Deploy function code using the 'Deploy Function' workflow"
          echo "2. Configure GitHub webhook URL: ${{ steps.output.outputs.function_url }}"
